<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>分布式 on 笔迹-工匠之芯</title><link>https://icorer.com/icorer_blog/tags/%E5%88%86%E5%B8%83%E5%BC%8F/</link><description>Recent content in 分布式 on 笔迹-工匠之芯</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 12 Jul 2023 21:25:16 +0800</lastBuildDate><atom:link href="https://icorer.com/icorer_blog/tags/%E5%88%86%E5%B8%83%E5%BC%8F/index.xml" rel="self" type="application/rss+xml"/><item><title>Cosmos meet CometBFT</title><link>https://icorer.com/icorer_blog/posts/cosmos/cosmos-meet-cometbft/</link><pubDate>Wed, 12 Jul 2023 21:25:16 +0800</pubDate><guid>https://icorer.com/icorer_blog/posts/cosmos/cosmos-meet-cometbft/</guid><description>Why Now? What’s Next? CometBFT 的目标是什么？ CometBFT 背后是谁？ 接下来的步骤是什么？ Common Questions CometBFT底层的共识算法是什么？ CometBFT 会放弃 Tendermint 共识算法吗？ Tendermint Core 是否会有多个竞争分叉为跨链提供动力？ 这会导致任何链分叉吗？ 如果我在基于 Tendermint Core 的网络上进行验证，我的操作是否存在任何问题？ tendermint-rs会发生什么？ tm-db 或 tm-load-test 会发生什么情况？ CometBFT，这是一个适用于链间及其他领域的状态机复制引擎！ CometBFT 是 Tendermint Core 的分叉和继承者，并将作为支持 Interchain Stack 的官方复制引擎。 CometBFT 的长期愿景是成为可靠、安全、大规模、特定应用区块链复制引擎的首选。
Interchain 基金会、Informal Systems、Cosmos SDK 团队以及 Cosmos 生态系统中的众多其他团队一直在共同努力。这篇文章解决了围绕此次发布的一些最重要的问题。请放心，我们一直在努力让升级或采用 CometBFT 尽可能顺利。我们将介绍背景详细信息、CometBFT 愿景和目标、这项工作背后的团队以及技术影响方面的后续步骤。
Why Now?我们决定以这个新名称开发旗舰 Cosmos 共识引擎，以标志着席卷整个生态系统的多项重要变化。
在技术方面，跨链在过去几年中取得了显着的发展。我们生活在一个 IBC 原生的多链世界。 ABCI 2.0 是 Interchain Stack 中缺失的关键部分，设计或质量保证方面（例如模块化、集成或严格测试）也是如此。此外，放弃 Tendermint Core v0.35 和 v0.36 版本暴露了开发方式的技术限制；请参阅此处了解更多详细信息。</description></item><item><title>Tendermint ABCI分布式KV存储引擎分析</title><link>https://icorer.com/icorer_blog/posts/web3/tendermint-distributed-kv-storage-engine-analysis/</link><pubDate>Tue, 23 May 2023 21:25:16 +0800</pubDate><guid>https://icorer.com/icorer_blog/posts/web3/tendermint-distributed-kv-storage-engine-analysis/</guid><description>背景介绍 1.Tendermint KV 模块分析 1.1 ABCI应用拦截Tendermint状态机 1.2 ABCI应用Application结构体分析 1.3 ABCI应用处理Tendermint 区块Deliver事务 1.4 ABCI应用处理Tendermint 区块Commit事务 1.5 ABCI应用处理Tendermint 区块Query事务 1.6 ABCI应用处理Tendermint 区块Check事务 1.7 KV存储引擎状态处理 2.Tendermint KV运行实践 2.1 安装Tendermint 2.1.1 二进制安装 2.1.3 源代码安装 2.1.3 运行Tendermint 2.1.4 重新安装 2.2 Tendermint KV编译及运行 2.3 Tendermint KV 运行测试 2.3.1 Tendermint Core RPC 交易广播 2.3.2 Tendermint Core RPC 查询广播 3.总结 附录 背景介绍Tendermint 是一个基于共识算法的分布式系统，它提供了一种在去中心化环境下实现可靠、安全、高效的数据存储和交互的方法。在这个环境中，一个分布式 KV 存储引擎是非常有用的，它可以让不同的节点在共享一个数据集合的同时保持数据的一致性和可靠性。
Tendermint 为分布式 KV 存储引擎提供了一些核心组件，其中最重要的是 ABCI（Application Blockchain Interface）接口和 KV 存储引擎。ABCI 接口定义了应用程序和 Tendermint Core 之间的交互协议，它规定了应用程序需要实现哪些方法以处理交易、查询和状态更改。Tendermint开源的 ts-db存储引擎则提供了一个标准的键值存储接口，可以将数据持久化到磁盘中，同时支持可插拔的存储引擎（例如 LevelDB、RocksDB 等）。</description></item></channel></rss>