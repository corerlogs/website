<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ethereum on 笔迹-工匠之芯</title><link>https://icorer.com/icorer_blog/tags/ethereum/</link><description>Recent content in Ethereum on 笔迹-工匠之芯</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 16 Dec 2023 22:15:12 +0800</lastBuildDate><atom:link href="https://icorer.com/icorer_blog/tags/ethereum/index.xml" rel="self" type="application/rss+xml"/><item><title>基于区块链的PKI管理框架</title><link>https://icorer.com/icorer_blog/posts/web3/blockchain-based-pki/</link><pubDate>Sat, 16 Dec 2023 22:15:12 +0800</pubDate><guid>https://icorer.com/icorer_blog/posts/web3/blockchain-based-pki/</guid><description>摘要 I.介绍 PKI问题及现有解决方案 基于日志的PKIs(Log-based PKIs) 信任网(WoT)（Web of Trust） 基于区块链的PKI（Blockchain-based PKI） II.背景 A.可信链（Chain of trust） B. 区块链技术 III. 相关工作 IV. 基于区块链的PKI框架 A.概述 B.设计方法论 C.架构 D.实现 E.区块链PKI的优势 V.评估和实验结果 A.性能 B.在以太坊中启动新CA的成本 C.局限性和挑战 VI. 结论 引用 摘要公钥基础设施（PKI）是促进互联网上安全信息交换的基石技术。但是，由于证书颁发机构（CA）可能会被用来为最终用户颁发未经授权的证书，因此PKI面临风险。最近的许多违规事件表明，如果CA受到损害，相应最终用户的安全将面临风险。作为一种新型的解决方案，区块链技术有可能解决传统PKI系统的问题，特别是消除单点故障和对CA缺点的快速反应。区块链能够在公共且不可变的分布式账本中存储和管理数字证书，从容产生完全可追溯的历史日志。在这篇论文中我们设计和开发了一个基于区块链的PKI管理框架，用于颁发、验证和撤销X.509证书。评估和实验结果证实，所提出的框架提供了更可靠、更强大的PKI系统，且维护成本适中。
I.介绍公钥基础设施（PKI）提供了一种通过互联网验证身份的安全方法。它定义了颁发、管理、验证和分发数字证书所需的策略和程序，以便安全地使用公钥加密。公钥的PKI管理通常基于证书标准X.509，该标准提供某些外部实体（证书颁发机构）对私钥所有权的验证。X.509证书被定义为公钥值与主题（例如域名）绑定的数据结构。绑定由受信任的证书颁发机构（CA）对每个证书进行数字签名来断言。CA可以通过深入验证私有证书持有者的身份来做出这一断言。
最近，知名CA的安全程序存在缺陷，表明CA的安全容易受到操作失误的影响。由于CA似乎是PKI中的单点故障，CA的错误或违规导致颁发未经授权的证书。例如，其中一件备受瞩目的是CA DigiNotar安全漏洞，导致利用该公司基础设施为知名域名颁发数百个流氓数字证书，其中包括google.com的一个。结果，在发现500多个假证书后，网络浏览器供应商被迫将荷兰CA DigiNotar颁发的所有证书列入黑名单。
在另外一个案例中，DigiCert Sdn是马来西亚的颁发机构。错误地颁发了22个弱SSL证书，这些证书可用于冒充网站和签署恶意软件。最终，主要浏览器不得不撤销对于DigiCert Sdn. Bhd颁发的所有证书的信任。（注：DigiCert Sdn. Bhd. 不隶属于美国公司 DigiCert, Inc.）美国大型证书颁发机构TrustWave也存在证书泄露问题。TrustWave承认，它向其中一位客户颁发了从属Root证书，以便该客户可以监控其内部网络上的流量。从属Root证书允许其持有者从Internet上的几乎任何域创建SSL证书。尽管TrustWave已经吊销该证书，并表示将不会向客户颁发从属跟证书，但这说明CA是多么容易犯错，以及这些失误的后果可能有多么严重。
PKI问题及现有解决方案提出了两种方法来解决SSL/TLS PKI问题：基于日志的PKI模式和点对点认证的去中心化网络（称为信任Web(WoT)）。
基于日志的PKIs(Log-based PKIs)该方法已被提议作为解决CA行为不当问题的新兴解决方案。其背后的想法是使用高度可用的公共日志服务器来监视和发布CA颁发的证书。这些公共日志通过确保最终客户只接受和信任公共记录的证书提供透明度。因此，CA的任何不当行为都会被用户和服务器检测到。Google的证书透明度（CT）是部署最广泛的基于日志的PKI，目前在Chrome和Firefox中都可用。与此同时，许多提案打算通过支持撤销和错误处理来扩展基于日志的PKI模式的功能。不幸的是，尽管有这些好处，基于日志的PKI仍然面对一些挑战，例如与证书吊销相关的挑战。
信任网(WoT)（Web of Trust）WoT的方法是完全分散的：用户可以通过签署其公钥证书来指定其他人值得信赖。通过这样做，用户积累了包含他的公钥和来自认为他值得信赖的实体的数字签名证书。如果可以验证该证书包含她/他信任的某人的签名，则该证书将手打第三方的信任。该系统受益于其分布式特性，因为它消除了任何中心故障点。然而，这使得新用户或远程用户加入网络变得困难，因为WoT的某些现有成员通常必须亲自与新用户会面，以首次验证她/他的身份并签署公钥。此外，与基于CA的方法不同，WoT无法处理密钥撤销。一个用户被限制选择另外一个用户作为她/他的“指定撤销者“，有权在私钥丢失或泄露时撤销她/他的证书。当前的使用方法依赖于定期向浏览器推动撤销列表。但是，这种方法会使无效证书受到信任，直到浏览器的吊销列表得到下一次推送为止。
基于区块链的PKI（Blockchain-based PKI）基于区块链的PKI启发了很多研究，它们基于区块链技术构建安全的PKI系统。他们的主要论点是，基于区块链的解决方案可以融合基于日志的PKI和WoT方法的优点，并解决传统PKI系统的一些问题。一方面，区块链解决了基于日志PKI方法的潜在故障点和部署问题，我们将在稍后讨论。另一方面，基于区块链的方法减轻了新证书持有者对WoT的需求，以证明现有网络成员的可信度。
我们的主要贡献是一个完整的基于区块链的PKI框架来管理X.509证书。我们的框架包含多项创新。第一，我们扩展标准X.509证书以与基于区块链的PKI方法兼容，我们使用X.509的扩展字段用于嵌入区块链元数据。第二，我们设计并实现了基于区块链的PKI，为数字证书提供可靠的管理。
本文的其余部分安排如下：第二节介绍了证书验证机制（称为信任链）的背景，并介绍了区块链技术如何帮助构建安全的PKI系统。第三节探讨了使用区块链实施PKI的相关工作。第四节我们展示了基于区块链的PKI解决方案。第五节提供了评估结果和讨论。最后，第六节对本文进行了总结。
II.背景在这一节，首先我们介绍信任链背后的想法，用于验证X.509证书。然后我们简要介绍了区块链技术以及如何使用它来构建PKI管理框架。
A.可信链（Chain of trust）传统的PKI系统是基于CA的，CA颁发签名证书，完全符合X.509标准，用于证明实体对公钥的所有权。例如，当用户通过网络浏览器登录Twitter时，网络浏览器首先通过检查给定证书的CA来验证持有Twitter公钥的所声明的证书。通常Web浏览器已预先配置为接受来自某些已知CA的证书。因此，为了使证书受到信任，它必须由用户浏览器或设备中受信任存储中存在的根CA颁发，或者由受根CA签名信任的子CA颁发。通常，Mozilla产品附带154个根证书。此外，苹果、微软和谷歌在其产品中嵌入了自己的受信任根证书存储。
给定证书和根证书之间的链接称为信任链。重要的是，信任链可以包含给定证书和根CA证书之间任意数量的子CA证书。然后，X509v3有一个名为Basic Constraints的扩展，该扩展可以限制有效证书链（信任链）的最大深度。
图1说明了从最终实体证书到信任链开始的根CA的认证路径。因此，如果最终实体证书不是由受信任的CA颁发的，则Web浏览器将检查颁发CA的证书是否由受信任的CA颁发，依此类推，直到找到受信任的CA，或者如果在链中找不到受信任的CA，则浏览器通常会显示错误。
B. 区块链技术区块链或分布式账本被证明是互联网行业中最有趣的技术，主要是在见证了比特币的成功之后。目前，大多数区块链平台都用于金融应用，但越来越多的不同领域的新应用开始出现。需要高可靠性和完全消除数据操作风险的应用程序可以使用区块链。此外，区块链是分布式的，因此避免了单点故障的情况。
最近几年区块链进化到可以执行任意逻辑，称为智能合约。从概念上讲，智能合约是一个运行在区块链之上的应用程序，并使用底层交易顺序来保持对等点之间智能合约执行结果的一致性。例如，以太坊区块链支持复杂且有状态的图灵完备语言，如Solidity，可用于编程和定义广泛的应用场景。
在PKI背景下，区块链技术提供了有价值的安全功能，例如证书撤销、消除中心故障点和可靠的交易记录。例如，通过快速证书吊销，基于区块链的PKI可以立即隔离受感染的CA和相应的证书，而无需等到证书吊销列表（CRL）的下一次更新。此外，基于区块链的PKI作为公共的 ”仅追加“日志，自然提供了Google提出的证书透明度（CT）属性。</description></item><item><title>Fleek Network：去中心化边缘平台</title><link>https://icorer.com/icorer_blog/posts/web3/fleek-network/</link><pubDate>Thu, 03 Aug 2023 22:15:12 +0800</pubDate><guid>https://icorer.com/icorer_blog/posts/web3/fleek-network/</guid><description>概要 背景：网络的演变 现代Web堆栈的演变 Web3 的模块化和可组合式演变 将现代 Web 引入 Web3 Fleek Network：去中心化边缘平台 关键概念和性能优化 地理意识 智能路由&amp;amp;工作分配 无状态执行 无虚拟机核心 （VM-Less Core） 内置（外部可扩展）文件系统 内容可寻址核心 增量内容检索和验证 Fleek网络：协议 简洁链状态 Narwhal &amp;amp; Bullshark 共识 Delivery Acknowledgement SNARKs 基于绩效的声誉 Fleek Network: Services SDK 与Service交互 节点分配&amp;amp;洗牌 资源&amp;amp;商品 服务示例：边缘计算 在Fleek Network建设: Who, What &amp;amp; Why 构建/使用服务的想法 网络/边缘服务 Web 3 服务的特定用例 去中心化CDN 去中心化网站/应用程序托管 去中心化 IPFS Pinning 去中心化边缘计算（基于 Web3 协议） 区块链快照即服务 zkVM、EVM 和其他 VM 作为服务 替代Rollup Sequencer 临时Rollups 边缘证明生成 验证随机性 Web3 查询/事件 参考 附录A: 绩效信誉算法 概要Fleek Network 是一个去中心化边缘平台，经过优化，可促进高性能 Web 服务（CDN、无服务器功能等）的部署和运行。Fleek Network的全球分布式、自主控制的边缘节点网络使开发者可以轻松创建和利用多种边缘服务。这些服务继承了加密且经济安全的基础设施，保障节点和地理范围覆盖、稳定且可预测的成本、以及网络上运行的所有服务的一致质量和性能。Fleek Network的目标是提供一个平台，所有Web3协议、中间件、服务和应用程序都可以从中受益，以进一步分散其堆栈，而无需牺牲成本、性能、复杂性或开发人员/终端用户体验。</description></item><item><title>EIP-4844改进提议：分片Blob事务</title><link>https://icorer.com/icorer_blog/posts/web3/eip-4844-reduced-l2-fees/</link><pubDate>Mon, 27 Feb 2023 23:35:16 +0800</pubDate><guid>https://icorer.com/icorer_blog/posts/web3/eip-4844-reduced-l2-fees/</guid><description>EIP-4844 分片Blob事务以简单、向前兼容的方式扩展以太坊的数据可用性。
一、摘要 二、动机 三、Specification 规范 3.1 Parameters 参数 3.2 Type aliases 类型别名 3.3 Cryptographic Helpers 加密助手 3.4 Helpers 3.5 New transaction type 新的交易类型 3.6 Header extension 头扩展 3.7 Beacon chain validation 信标链验证 3.8 Opcode to get versioned hashes 获取版本哈希的操作码 3.9 Point evaluation precompile 点评估预编译 3.10 Gas accounting 3.11 Networking 网络 四、基本原理 4.1 On the path to sharding 在分片的路上 4.2 How rollups would function 4.3 Versioned hashes &amp;amp; precompile return data 版本化哈希和预编译返回数据 4.</description></item></channel></rss>